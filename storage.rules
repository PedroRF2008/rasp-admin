rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOperator() {
      return isAuthenticated() && 
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'operator';
    }
    
    function hasAnyRole() {
      return isAdmin() || isOperator();
    }

    // Groups media files
    match /groupsMedia/{groupId}/{mediaId} {
      allow read: if hasAnyRole();
      allow create: if hasAnyRole();
      allow delete: if hasAnyRole();
    }

    // Deny access to all other files by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
