rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOperator() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'operator';
    }
    
    function hasAnyRole() {
      return isAdmin() || isOperator();
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if isAdmin();
    }

    // Groups collection
    match /groups/{groupId} {
      allow read: if hasAnyRole();
      allow create, update: if hasAnyRole();
      allow delete: if isAdmin();
    }

    // Devices collection
    match /devices/{deviceId} {
      allow read: if hasAnyRole();
      allow create: if isAdmin();
      allow update: if hasAnyRole();
      allow delete: if isAdmin();
    }

    // Temporary media collection (used for generating IDs)
    match /media_temp/{docId} {
      allow read, write: if hasAnyRole();
    }

    // Deny access to all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}